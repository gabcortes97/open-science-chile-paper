axis.title = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
) +
facet_grid(~enfoq) +
xlim(1, 2.5) +
geom_text(aes(label = porcentaje),
position = position_stack(vjust = 0.5), # Centra las etiquetas
color = "white", size = 4) + # Ajusta texto
scale_fill_viridis_d(option = "magma", begin = .1, end = .7, direction = 1)
#| label: tbl-tablaacum
#| tbl-cap: "Tabla de percepción acumulada sobre la reproducibilidad"
cais_v2 %>%
group_by(mod05_4) %>%
summarise(n = n()) %>%
mutate(acum = round(cumsum(n / sum(n)) * 100, 2)) %>%
kable(col.names = c("Respuesta", "Frecuencia", "Acum (%)"))
#| label: tbl-tablaacum
#| tbl-cap: "Tabla de percepción acumulada sobre la reproducibilidad"
cais_v2 %>%
group_by(mod05_4) %>%
summarise(n = n()) %>%
mutate(acum = round(cumsum(n / sum(n)) * 100, 2)) %>%
kable(col.names = c("Investigaciones Reproducibles", "Frecuencia", "Acum (%)"))
#| label: tbl-tablaacum
#| tbl-cap: "Tabla de percepción acumulada sobre la reproducibilidad"
cais_v2 %>%
group_by(mod05_4) %>%
summarise(n = n()) %>%
mutate(acum = round(cumsum(n / sum(n)) * 100, 2)) %>%
kable(col.names = c("Investigaciones \nReproducibles", "Frecuencia", "Acum (%)"))
#| label: tbl-tablaacum
#| tbl-cap: "Percepción de porcentaje de investigaciones reproducibles en Ciencias Sociales"
cais_v2 %>%
group_by(mod05_4) %>%
summarise(n = n()) %>%
mutate(acum = round(cumsum(n / sum(n)) * 100, 2)) %>%
kable(col.names = c("Investigaciones \nReproducibles", "Frecuencia", "Acum (%)"))
cais_v2 %>%
mutate(mod05_3 = factor(mod05_3,
labels = c("No hay crisis de reproducibilidad",
"Hay una ligera crisis de reproducibilidad",
"Hay una importante crisis de reproducibilidad",
"No sé"),
levels = 1:4)) %>%
filter(!is.na(mod05_3) & !is.na(enfoq)) %>%  #Elimina valores NA
group_by(enfoq, mod05_3) %>%
summarise(n = n(), .groups = "drop")%>%
complete(enfoq, mod05_3, fill = list(n = 0)) %>%  # rellenar vacios
group_by(enfoq) %>%
mutate(freq = n / sum(n),
porcentaje = paste0(round(freq * 100, 1), "%")) %>% # porcentajes
ggplot(aes(x = 2, y = freq, fill = mod05_3)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel1") + # colores
labs(fill = "") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
) +
facet_grid(~enfoq) +
xlim(1, 2.5) +
geom_text(aes(label = porcentaje),
position = position_stack(vjust = 0.5), # Centra las etiquetas
color = "white", size = 4) + # Ajusta texto
scale_fill_viridis_d(option = "magma", begin = .1, end = .7, direction = 1)
cais_v2 %>%
pivot_longer(cols = c(mod02_1, starts_with("mod02_2"))) %>%
mutate(name = factor(name, labels = labels_cca),
value = factor(car::recode(value, "1:3 = 1; 4:5 = 2; 6:7 = 3"),
labels = c("Baja", "Media", "Alta"))) %>%
count(name, edad, value) %>%
group_by(name, edad) %>%
mutate(freq = n/sum(n)*100) %>%
filter(value == "Alta") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = edad)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1)
library(formr)
library(tidyverse)
library(writexl)
library(sjlabelled)
library(summarytools)
library(sjmisc)
library(summarytools)
library(ggrepel)
library(gridExtra)
library(kableExtra)
remove(list = ls())
load("input/data/cais.RData") #cargar datos local
#names(lisa_cc)
lisa_v2_all <- cais %>%
rowwise() %>%
mutate(n_NAs = sum(is.na(across(everything())))) #generamos una nueva variable que cuenta número de NA
lisa_v2_75 <- lisa_v2_all %>%
filter(n_NAs < 37) #N=40 -> 42 -> 70 -> 72
# lisa_v2_50 <- lisa_v2_all %>%
#   filter(n_NAs < 72) #N=46 -> 48 -> 78 -> 80
#
# lisa_v2_15 <- lisa_v2_all %>%
#   filter(n_NAs < 108) #N=65 -> 69 -> 107 -> 112
# lisa_v2_75 %>% mutate(edad= case_when(mod08_1>=28 & mod08_1<=34 ~ 1,
#                                   mod08_1>=35 & mod08_1<=49 ~ 2,
#                                   mod08_1>=50 ~ 3)) %>%
#   group_by(edad) %>% count()
cais_v2 <- lisa_v2_75 %>%
haven::zap_labels() %>% # eliminar las etiquetas de variables (haven_labelled) de una base de datos
filter(mod01_6 > 1950) %>%  # filtrar datos de encuestas dudosas y de prueba
mutate(edad0 = factor(car::recode(mod08_1, "28:34 = 1; 35:49 = 2; 50:80 = 3"),
levels = c(1,2,3),
labels = c("28 a 34 años", "35 a 49 años", "50 o más años")),
grado0 = factor(car::recode(mod01_5, "1=1; 2:3=2"),
levels= c(1,2),
labels= c("Magíster", "Doctorado")),
etapa0 = factor(car::recode(mod01_1, "0:5 = 1; 6:15 = 2; 16:60 = 3"),
levels= c(1,2,3),
labels= c("Inicial (0 a 5 años)", "Intermedia (6 a 15 años)", "Avanzada (>15 años)")),
enfoq0 = case_when(mod01_10 == 1 ~ 1, # cuali
mod01_10 == 2 ~ 2, # mixto
mod01_10 %in% c(3,4) ~ 3, #cuanti
mod01_10 == 4 ~ NA_real_),
mod08_2= factor(mod08_2,
levels= c(1,2),
labels=c("Mujer", "Hombre")),
enfoq0= factor(enfoq0,
levels= c(1,2,3),
labels= c("Cualitativo", "Mixto", "Cuantitativo")),
sexo = as_label(mod08_2),
edad = as_label(edad0),
grado = as_label(grado0),
etapa = as_label(etapa0),
enfoq = as_label(enfoq0))
legend = "Fuente CAIS (2024), N = 98"
cais_test_annos <- cais_v2 %>%
select(mod01_1, mod08_1)
frq(cais_v2$etapa)
frq(cais_v2$sexo)
frq(cais_v2$edad)
frq(cais_v2$enfoq)
frq(cais_v2$grado)
cais_v2 %>%
pivot_longer(cols = c(mod02_1, starts_with("mod02_2"))) %>%
mutate(name = factor(name, labels = labels_cca),
value = factor(car::recode(value, "1:3 = 1; 4:5 = 2; 6:7 = 3"),
labels = c("Baja", "Media", "Alta"))) %>%
count(name, edad, value) %>%
group_by(name, edad) %>%
mutate(freq = n/sum(n)*100) %>%
filter(value == "Alta") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = edad)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1)
# El siguiente gráfico visualiza una batería, es decir, varios tems con preguntas diferentes, pero iguales valores de respuesta. Este tipo de gráficos sigue la siguiente estructura tipo:
labels_cca <- c("Concepto \nCiencia Abierta",
"Acceso abierto \npublicaciones",
"Preregistro \nde hipótesis",
"Apertura datos \ninvestigación",
"Investigación \nreproducible", "Repositorios \nabiertos",
"Software \nlibre análisis", "Acceso \nabierto datos")
cais_v2 %>%
pivot_longer(cols = c(mod02_1, starts_with("mod02_2"))) %>%
mutate(name = factor(name, labels = labels_cca),
value = factor(car::recode(value, "1:3 = 1; 4:5 = 2; 6:7 = 3"),
labels = c("Baja", "Media", "Alta"))) %>%
count(name, edad, value) %>%
group_by(name, edad) %>%
mutate(freq = n/sum(n)*100) %>%
filter(value == "Alta") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = edad)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1)
labels_comu <- c("Compartir códigos entre\ninvestigadores/as",
"Utilizar repositorios abiertos en línea\npara subir información relacionada con\nlas investigaciones",
"Reporte selectivo de resultados, es decir,\nsolo aquello que va en concordancia\ncon las hipótesis",
"No informar estudios o variables que no\nalcanzaron significación estadística o\nalgún otro umbral estadístico deseado",
"Manipular datos para validar\nlas hipótesis")
labels_prop <- c("Compartir códigos entre\ninvestigadores/as",
"Utilizar repositorios abiertos en línea\npara subir información relacionada con\nlas investigaciones",
"Reporte selectivo de resultados, es decir,\nsolo aquello que va en concordancia\ncon las hipótesis",
"No informar estudios o variables que no\nalcanzaron significación estadística o\nalgún otro umbral estadístico deseado")
pr_comu <- cais_v2 %>%
select(starts_with("mod03_1_")) %>% pivot_longer(cols = starts_with("mod03_1_")) %>%
tibble(var = c(rep("Prácticas de la comunidad"))) %>%
mutate(name = factor(name, labels = labels_comu))
pr_prop <- cais_v2 %>%
select(starts_with("mod03_2_")) %>%  pivot_longer(cols = c(starts_with("mod03_2_"))) %>%
tibble(var = c(rep("Prácticas propias"))) %>%
mutate(name = factor(name, labels = labels_prop))
pr_comu %>%
mutate(value = factor(car::recode(value, "1:2 = 1; 3 = 2; 4:5 = 3"),
labels = c("Nunca o casi nunca", "A veces", "Casi siempre o siempre"))) %>%
count(name, value, var) %>%
group_by(name, var) %>%
mutate(freq = n/sum(n)) %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = reorder(name, freq), y = freq, fill = '#f1605d',
label = scales::percent(freq, accuracy = .1))) +
geom_col(position = 'dodge2') +
geom_text(position = position_dodge(width  = .9),  size = 2.5, hjust = -.1) +
labs(subtitle = "Porcentaje que responde 'Casi siempre o siempre'", caption = legend, x = "", y = "", fill = "") +
theme(legend.position = 'none') +
#scale_colour_viridis_d(option = "magma", begin = 0, end = 1) +
scale_y_continuous(labels = scales::percent, limits = c(0,1)) +
guides(fill = guide_legend(reverse = TRUE)) +
coord_flip() +
theme_minimal() +
theme(legend.position = "none")
pr_prop %>%
mutate(value = factor(car::recode(value, "1:2 = 1; 3 = 2; 4:5 = 3"),
labels = c("Nunca o casi nunca", "A veces", "Casi siempre o siempre"))) %>%
count(name, value, var) %>%
group_by(name, var) %>%
mutate(freq = n/sum(n)) %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = reorder(name, freq), y = freq, fill = '#f1605d',
label = scales::percent(freq, accuracy = .1))) +
geom_col(position = 'dodge2') +
geom_text(position = position_dodge(width  = .9),  size = 2.5, hjust = -.1) +
labs(subtitle = "Porcentaje que responde 'Casi siempre o siempre'", caption = legend, x = "", y = "", fill = "") +
theme(legend.position = 'none') +
#scale_colour_viridis_d(option = "magma", begin = 0, end = 1) +
scale_y_continuous(labels = scales::percent, limits = c(0,1)) +
guides(fill = guide_legend(reverse = TRUE)) +
coord_flip() +
theme_minimal() +
theme(legend.position = "none")
# Gráfico Sexo
pr_comu_sexo <- cais_v2 %>%
select(starts_with("mod03_1_"), sexo) %>% pivot_longer(cols = starts_with("mod03_1_")) %>%
tibble(var = c(rep("Prácticas de la comunidad"))) %>%
mutate(name = factor(name, labels = labels_comu))
pr_prop_sexo <- cais_v2 %>%
select(starts_with("mod03_2_"), sexo) %>%  pivot_longer(cols = c(starts_with("mod03_2_"))) %>%
tibble(var = c(rep("Prácticas propias"))) %>%
mutate(name = factor(name, labels = labels_prop))
practicas_sexo <- rbind(pr_comu_sexo, pr_prop_sexo) %>%
mutate(value = factor(car::recode(value, "1:2 = 1; 3 = 2; 4:5 = 3"),
labels = c("Nunca o casi nunca", "A veces", "Casi siempre o siempre"))) %>%
mutate(var = factor(var, levels = c("Prácticas de la comunidad", "Prácticas propias"))) %>%
count(name, value, var, sexo) %>%
group_by(name, var, sexo) %>%
mutate(freq = n/sum(n)*100)
practicas_sexo %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = sexo)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
facet_wrap(~ var)
pr_comu_etapa <- cais_v2 %>%
select(starts_with("mod03_1_"), etapa) %>% pivot_longer(cols = starts_with("mod03_1_")) %>%
tibble(var = c(rep("Prácticas de la comunidad"))) %>%
mutate(name = factor(name, labels = labels_comu))
pr_prop_etapa <- cais_v2 %>%
select(starts_with("mod03_2_"), etapa) %>%  pivot_longer(cols = c(starts_with("mod03_2_"))) %>%
tibble(var = c(rep("Prácticas propias"))) %>%
mutate(name = factor(name, labels = labels_prop))
practicas_etapa <- rbind(pr_comu_etapa, pr_prop_etapa) %>%
mutate(value = factor(car::recode(value, "1:2 = 1; 3 = 2; 4:5 = 3"),
labels = c("Nunca o casi nunca", "A veces", "Casi siempre o siempre"))) %>%
mutate(var = factor(var, levels = c("Prácticas de la comunidad", "Prácticas propias"))) %>%
count(name, value, var, etapa) %>%
group_by(name, var, etapa) %>%
mutate(freq = n/sum(n)*100)
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
facet_wrap(~ var)
practicas_sexo %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = sexo)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
facet_wrap(~ var)
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
facet_wrap(~ var)
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_line(size = 0.8, aes(group = interaction(name, var)), color = "gray30") +  # Agrupar por práctica y categoría
geom_point(size = 3) +  # Crear puntos para cada práctica
geom_text_repel(  # Evitar solapamiento de etiquetas
aes(label = paste0(round(freq, 1), "%")),
size = 3,
nudge_x = 5,  # Ajustar posición horizontal
direction = "y"
) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
facet_grid(~ var, scales = "free_y", space = "free_y")  # Agrupa etiquetas y organiza por categoría
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_line(size = 0.8, aes(group = interaction(name, var)), color = "gray30") +  # Conectar puntos del mismo grupo
geom_point(size = 3, aes(shape = var)) +  # Crear puntos diferenciados por categoría
geom_text_repel(  # Evitar solapamiento de etiquetas
aes(label = paste0(round(freq, 1), "%")),
size = 3,
nudge_x = 5,  # Ajustar posición horizontal
direction = "y"
) +
labs(
x = "",
y = "",
color = "",
shape = "Categoría"
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
scale_shape_manual(values = c(16, 17))  # Diferenciar puntos de categorías propias y comunidad
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_point(size = 3, aes(shape = var), position = position_dodge(width = 0.5)) +  # Puntos agrupados con desplazamiento
geom_line(aes(group = interaction(name, var)),
size = 0.8, position = position_dodge(width = 0.5), color = "gray30") +  # Líneas conectando puntos de la misma práctica
geom_text_repel(
aes(label = paste0(round(freq, 1), "%")),
size = 3,
position = position_dodge(width = 0.5),  # Alinear etiquetas con los puntos
direction = "y"
) +
labs(
x = "",
y = "",
color = "Etapa",
shape = "Categoría"
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
scale_shape_manual(values = c(16, 17))
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_point(size = 3, aes(shape = var), position = position_dodge(width = 0.5)) +  # Puntos agrupados con desplazamiento
geom_line(aes(group = interaction(name, var)),
size = 0.8, position = position_dodge(width = 0.5), color = "gray30") +  # Líneas conectando puntos de la misma práctica
# geom_text_repel(
#   aes(label = paste0(round(freq, 1), "%")),
#   size = 3,
#   position = position_dodge(width = 0.5),  # Alinear etiquetas con los puntos
#    direction = "y"
# ) +
labs(
x = "",
y = "",
color = "Etapa",
shape = "Categoría"
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
scale_shape_manual(values = c(16, 17))
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_point(size = 3, aes(shape = var), position = position_dodge(width = 0.5)) +  # Puntos agrupados con desplazamiento
geom_line(aes(group = interaction(name, var)),
size = 0.8, position = position_dodge(width = 0.5), color = "gray30") +  # Líneas conectando puntos de la misma práctica
# geom_text_repel(
#   aes(label = paste0(round(freq, 1), "%")),
#   size = 3,
#   position = position_dodge(width = 0.5),  # Alinear etiquetas con los puntos
#    direction = "y"
# ) +
labs(
x = "",
y = "",
color = "Etapa",
shape = "Categoría"
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
scale_shape_manual(values = c(16, 17))
practicas_etapa %>%
filter(value == "Casi siempre o siempre") %>%
ggplot(aes(x = freq, y = reorder(name, freq), color = etapa)) +
geom_line(size = 0.8, aes(group = name), color = "gray30") +  # Añadir líneas entre puntos de la misma práctica
geom_point(size = 3) +  # Crear puntos para cada práctica
# geom_text_repel(  # Evitar solapamiento de etiquetas
# 	aes(label = paste0(round(freq, 1), "%")),
# 	size = 3,
# 	nudge_x = 5,  # Ajustar posición horizontal
# 	direction = "y"
# ) +
labs(
x = "",
y = "",
color = ""
) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_viridis_d(option = "magma", begin = .1, end = .7, direction = -1) +
facet_wrap(~ var)
